CREATE TABLE CLIENTE
(
    CODIGO          NUMBER          NOT NULL,
    NOME            VARCHAR2(60)    NOT NULL,
    RUA             VARCHAR2(80)    NOT NULL,
    NR              NUMBER(4)       NOT NULL,
    BAIRRO          VARCHAR2(50)    NOT NULL,
    COMPLEMENTO     VARCHAR2(100)   NULL,
    CIDADE          VARCHAR2(50)    NOT NULL,
    UF              VARCHAR2(2)     NOT NULL,
    CEP             VARCHAR2(10)    NOT NULL,
    CONSTRAINT PK_CLIENTE PRIMARY KEY (CODIGO)
);

CREATE TABLE PF
(
    CODIGO_CLI      NUMBER          NOT NULL,
    CNPF            VARCHAR2(14)    NOT NULL,
    RG              VARCHAR2(10)    NOT NULL,
    DATA_NASCIMENTO DATE            NOT NULL,
    CONSTRAINT PK_PF PRIMARY KEY (CODIGO_CLI),
    CONSTRAINT FK_CLIENTE_PF FOREIGN KEY (CODIGO_CLI) REFERENCES CLIENTE (CODIGO)
);

CREATE TABLE PJ
(
    CODIGO_CLI      NUMBER          NOT NULL,
    CNPJ            VARCHAR2(19)    NOT NULL,
    IE              VARCHAR2(10)    NOT NULL,
    NOME_FANTASIA   VARCHAR2(60)    NOT NULL,
    CONSTRAINT PK_PJ PRIMARY KEY (CODIGO_CLI),
    CONSTRAINT FK_CLIENTE_PJ FOREIGN KEY (CODIGO_CLI) REFERENCES CLIENTE (CODIGO)
);

CREATE TABLE PRODUTO
(
    CODIGO          NUMBER          NOT NULL,
    DESCRICAO       VARCHAR2(80)    NOT NULL,
    UNID_MEDIDA     VARCHAR2(10)    NOT NULL,
    CONSTRAINT PK_PRODUTO PRIMARY KEY (CODIGO)
);

CREATE TABLE VENDEDOR
(
    MATRICULA       NUMBER          NOT NULL,
    NOME            VARCHAR2(60)    NOT NULL,
    CNPF            VARCHAR2(14)    NOT NULL,
    CONSTRAINT PK_VENDEDOR PRIMARY KEY (MATRICULA)
);

CREATE TABLE FONE_CLIENTE
(
    NUMERO          VARCHAR2(14)    NOT NULL,
    CODIGO_CLI      NUMBER          NOT NULL,
    CONSTRAINT PK_FONE_CLIENTE PRIMARY KEY (NUMERO, CODIGO_CLI),
    CONSTRAINT FK_FONE_CLIENTE FOREIGN KEY (CODIGO_CLI) REFERENCES CLIENTE (CODIGO)
);

CREATE TABLE FONE_VENDEDOR
(
    NUMERO          VARCHAR2(14)    NOT NULL,
    MATRICULA_VEN   NUMBER          NOT NULL,
    CONSTRAINT PK_FONE_VENDEDOR PRIMARY KEY (NUMERO, MATRICULA_VEN),
    CONSTRAINT FK_FONE_VENDEDOR FOREIGN KEY (MATRICULA_VEN) REFERENCES VENDEDOR (MATRICULA)
);

CREATE TABLE PRATELEIRA
(
    CODIGO          NUMBER(3)       NOT NULL,
    DESCRICAO       VARCHAR2(50)    NOT NULL,
    NUMERO_SECOES   NUMBER(2)       NOT NULL,
    CONSTRAINT PK_PRATELEIRA PRIMARY KEY (CODIGO)
);


DROP TABLE PEDIDO CASCADE CONSTRAINT;

CREATE TABLE PEDIDO (
    NUMERO          NUMBER(6) NOT NULL,
    DATA            DATE NOT NULL,
    PRAZO_ENTREGA   DATE NOT NULL,
    RUA             VARCHAR2(80),
    NR              NUMBER(4),
    BAIRRO          VARCHAR2(50),
    COMPLEMENTO     VARCHAR2(100),
    CIDADE          VARCHAR2(50),
    UF              VARCHAR2(2),
    CEP             VARCHAR(10),
    TOTAL_FATURA    NUMBER(8,2),
    CODIGO_CLI      NUMBER,
    MATRICULA_VEN   NUMBER
);

ALTER TABLE PEDIDO 
ADD CONSTRAINT PK_PEDIDO PRIMARY KEY (NUMERO);
ALTER TABLE PEDIDO 
ADD CONSTRAINT FK_PED_CLIENTE FOREIGN KEY (CODIGO_CLI) REFERENCES CLIENTE (CODIGO);
ALTER TABLE PEDIDO
ADD CONSTRAINT FK_PED_VENDEDOR FOREIGN KEY (MATRICULA_VEN) REFERENCES VENDEDOR (MATRICULA);

--TABELA ESTOQUE
DROP TABLE ESTOQUE CASCADE CONSTRAINT;

CREATE TABLE ESTOQUE (
    DATA_ENTRADA    DATE,
    CODIGO_PRO      NUMBER,
    CODIGO_PRA      NUMBER(3),
    QUANTIDADE      NUMBER(5) NOT NULL,
    DATA_VALIDADE   DATE
);

ALTER TABLE ESTOQUE
ADD CONSTRAINT PK_ESTOQUE PRIMARY KEY (DATA_ENTRADA,CODIGO_PRO, CODIGO_PRA);
ALTER TABLE ESTOQUE
ADD CONSTRAINT FK_EST_PRODUTO FOREIGN KEY (CODIGO_PRO) REFERENCES PRODUTO (CODIGO);
ALTER TABLE ESTOQUE
ADD CONSTRAINT FK_EST_PRATELEIRA FOREIGN KEY (CODIGO_PRA) REFERENCES PRATELEIRA (CODIGO);


--TABELA CAPACIDADE_ESTOQUE
DROP TABLE CAPACIDADE_ESTOQUE CASCADE CONSTRAINT;

CREATE TABLE CAPACIDADE_ESTOQUE (
    CODIGO_PRO        NUMBER,
    CODIGO_PRA        NUMBER(3),
    QUANTIDADE        NUMBER(5)
);

ALTER TABLE CAPACIDADE_ESTOQUE
ADD CONSTRAINT PK_CAPACIDADE_ESTOQUE PRIMARY KEY (CODIGO_PRO, CODIGO_PRA);

ALTER TABLE CAPACIDADE_ESTOQUE
ADD CONSTRAINT FK_CAP_EST_PRODUTO FOREIGN KEY (CODIGO_PRO) REFERENCES PRODUTO (CODIGO);

ALTER TABLE CAPACIDADE_ESTOQUE
ADD CONSTRAINT FK_CAP_EST_PRATELEIRA FOREIGN KEY (CODIGO_PRA) REFERENCES PRATELEIRA (CODIGO);

CREATE TABLE ITEM_PRODUTO (
    CODIGO_PRO          NUMBER,  -- Código do produto
    NUMERO_PED          NUMBER(6),  -- Número do pedido
    QUANTIDADE          NUMBER(5),  -- Quantidade do produto no pedido
    PRECO_UNITARIO      NUMBER(5,2),  -- Preço unitário do produto
    VALOR_ITEM          NUMBER(7,2)  -- Valor total do item no pedido
);

ALTER TABLE ITEM_PRODUTO 
ADD CONSTRAINT PK_ITEM_PRODUTO PRIMARY KEY (CODIGO_PRO, NUMERO_PED);
ALTER TABLE ITEM_PRODUTO
ADD CONSTRAINT FK_ITEM_PEDIDO FOREIGN KEY (NUMERO_PED) REFERENCES PEDIDO (NUMERO);
ALTER TABLE ITEM_PRODUTO
ADD CONSTRAINT FK_ITEM_PRODUTO FOREIGN KEY (CODIGO_PRO) REFERENCES PRODUTO (CODIGO);

DROP SEQUENCE SEQ_ITEM_ID;
CREATE SEQUENCE SEQ_ITEM_ID INCREMENT BY 2 START WITH 1;

SELECT *
FROM USER_SEQUENCES
WHERE SEQUENCE_NAME='SEQ_ITEM_ID';

SELECT SEQ_ITEM_ID.NEXTVAL
FROM DUAL;

COMMENT ON TABLE ITEM_PRODUTO IS 'Tabela que armazena os itens de um pedido, relacionando produtos e pedidos';

SELECT *
FROM USER_TAB_COMMENTS
WHERE TABLE_NAME='ITEM_PRODUTO';

COMMENT ON COLUMN ITEM_PRODUTO.CODIGO_PRO IS 'Código do produto';
COMMENT ON COLUMN ITEM_PRODUTO.NUMERO_PED IS 'Número do pedido';
COMMENT ON COLUMN ITEM_PRODUTO.QUANTIDADE IS 'Quantidade do produto no pedido';
COMMENT ON COLUMN ITEM_PRODUTO.PRECO_UNITARIO IS 'Preço unitário do produto';
COMMENT ON COLUMN ITEM_PRODUTO.VALOR_ITEM IS 'Valor total do item no pedido';

SELECT *
FROM USER_COL_COMMENTS
WHERE TABLE_NAME='ITEM_PRODUTO';

-- Copiando dados para a tabela CLIENTE
INSERT INTO CLIENTE
SELECT * FROM DEMO.CLIENTE;

-- Copiando dados para a tabela PF
INSERT INTO PF
SELECT * FROM DEMO.PF;

-- Copiando dados para a tabela PJ
INSERT INTO PJ
SELECT * FROM DEMO.PJ;

-- Copiando dados para a tabela PRODUTO
INSERT INTO PRODUTO
SELECT * FROM DEMO.PRODUTO;

-- Copiando dados para a tabela VENDEDOR
INSERT INTO VENDEDOR
SELECT * FROM DEMO.VENDEDOR;

-- Copiando dados para a tabela FONE_CLIENTE
INSERT INTO FONE_CLIENTE
SELECT * FROM DEMO.FONE_CLIENTE;

-- Copiando dados para a tabela FONE_VENDEDOR
INSERT INTO FONE_VENDEDOR
SELECT * FROM DEMO.FONE_VENDEDOR;

-- Copiando dados para a tabela PEDIDO
INSERT INTO PEDIDO
SELECT * FROM DEMO.PEDIDO;

-- Copiando dados para a tabela ESTOQUE
INSERT INTO ESTOQUE
SELECT * FROM DEMO.ESTOQUE;

-- Copiando dados para a tabela CAPACIDADE_ESTOQUE
INSERT INTO CAPACIDADE_ESTOQUE
SELECT * FROM DEMO.CAPACIDADE_ESTOQUE;


-- 1. Produto 207 para todos os pedidos pares e ano menor 2018, com a quantidade 100 e preço unitário R$ 10.00
INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 207, NUMERO, 100, 10.00, 100 * 10.00
FROM PEDIDO
WHERE MOD(NUMERO, 2) = 0 AND EXTRACT(YEAR FROM DATA) < 2018;

-- 2. Produto 206 para todos os pedidos ímpares e ano igual 2018, com a quantidade 50 e preço unitário R$ 12.00
INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 206, NUMERO, 50, 12.00, 50 * 12.00
FROM PEDIDO
WHERE MOD(NUMERO, 2) <> 0 AND EXTRACT(YEAR FROM DATA) = 2018;

-- 3. Produto 207 para todos os pedidos pares e ano igual 2018, com a quantidade 150 e preço unitário R$ 14.00
INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 207, NUMERO, 150, 14.00, 150 * 14.00
FROM PEDIDO
WHERE MOD(NUMERO, 2) = 0 AND EXTRACT(YEAR FROM DATA) = 2018;

-- 4. Produto 206 para todos os pedidos ímpares e ano menor 2018, com a quantidade 200 e preço unitário R$ 8.00
INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 206, NUMERO, 200, 8.00, 200 * 8.00
FROM PEDIDO
WHERE MOD(NUMERO, 2) <> 0 AND EXTRACT(YEAR FROM DATA) < 2018;

-- 5. Produto 208 para todos sem endereço de entrega e ano igual 2017, com a quantidade 80 e preço unitário R$ 18.00
INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 208, NUMERO, 80, 18.00, 80 * 18.00
FROM PEDIDO
WHERE RUA IS NULL AND NR IS NULL AND BAIRRO IS NULL AND COMPLEMENTO IS NULL
AND CIDADE IS NULL AND UF IS NULL AND CEP IS NULL AND EXTRACT(YEAR FROM DATA) = 2017;

-- 6. Produto 208 para todos sem endereço de entrega e ano igual 2018, com a quantidade 70 e preço unitário R$ 20.00
INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 208, NUMERO, 70, 20.00, 70 * 20.00
FROM PEDIDO
WHERE RUA IS NULL AND NR IS NULL AND BAIRRO IS NULL AND COMPLEMENTO IS NULL
AND CIDADE IS NULL AND UF IS NULL AND CEP IS NULL AND EXTRACT(YEAR FROM DATA) = 2018;

-- 7. Produto 202 para todos pedidos com endereço de entrega e dia ímpar de entrega, com a quantidade 60 e preço unitário R$ 15.00
INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 202, NUMERO, 60, 15.00, 60 * 15.00
FROM PEDIDO
WHERE RUA IS NOT NULL AND NR IS NOT NULL AND BAIRRO IS NOT NULL AND COMPLEMENTO IS NOT NULL
AND CIDADE IS NOT NULL AND UF IS NOT NULL AND CEP IS NOT NULL AND MOD(EXTRACT(DAY FROM PRAZO_ENTREGA), 2) <> 0;

-- 8. Produto 205 para todos pedidos com endereço de entrega e dia par da data do pedido, com a quantidade 90 e preço unitário R$ 11.50
INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 205, NUMERO, 90, 11.50, 90 * 11.50
FROM PEDIDO
WHERE RUA IS NOT NULL AND NR IS NOT NULL AND BAIRRO IS NOT NULL AND COMPLEMENTO IS NOT NULL
AND CIDADE IS NOT NULL AND UF IS NOT NULL AND CEP IS NOT NULL AND MOD(EXTRACT(DAY FROM DATA), 2) = 0;

-- 9. Produto 203 para todos pedidos com endereço de entrega e dia ímpar da data de pedido, com a quantidade 550 e preço unitário R$ 21.35
INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 203, NUMERO, 550, 21.35, 550 * 21.35
FROM PEDIDO
WHERE RUA IS NOT NULL AND NR IS NOT NULL AND BAIRRO IS NOT NULL AND COMPLEMENTO IS NOT NULL
AND CIDADE IS NOT NULL AND UF IS NOT NULL AND CEP IS NOT NULL AND MOD(EXTRACT(DAY FROM DATA), 2) <> 0;

-- 10. Produto 204 para todos pedidos sem endereço de entrega e dia par da data do pedido, com a quantidade 150 e preço unitário R$ 25.85
INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 204, NUMERO, 150, 25.85, 150 * 25.85
FROM PEDIDO
WHERE RUA IS NULL AND NR IS NULL AND BAIRRO IS NULL AND COMPLEMENTO IS NULL
AND CIDADE IS NULL AND UF IS NULL AND CEP IS NULL AND MOD(EXTRACT(DAY FROM DATA), 2) = 0;
